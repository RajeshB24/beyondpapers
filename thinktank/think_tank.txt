Its all Experiment "Progress is more important than cleanliness "




Switcher :
      Main components of switcher algorithm are Iteration of Base Learners,Split+Switching Process and Split Learning.Any 
      advancement can be made in following aspects.

      1. Base Learners Pre Initialisation 
      3. Switching Process Refinement 
      2. Accurate Split Learners 
      3. Intelligent Splitting Criterion
      5. Base Learner  Artitechture Optimization
      6. Performance and Distributed Compute
      7. Intelligent Callbacks

Selected Tasks :

1.Code Refinement : Create package and load in github




Artitechture:
1. Pre initialise base learner weights with Pre Learner Neural Net | Done | No Major Improvement in Modelling Performance
2. Pre initialise splits with Kmeans instead of Random Split  | Done | Users can initialise split group with any model
3. Pre initialise splits with CART Tree instead of Random Split | Done | Users can initialise split group with any model
4. Create a new split automatically if existing splits are not sufficient.
5. Test and Try Base Learner Architecture ,add to BaseLearners Library.
6. Make Switcher Generalisable with code sharable between any Baselearner / SplitLearner Choice 
7. Stop switching if no more swtiching is possible..
8. Relay : Create new network for misclassified...


New Ensembles:
1. ConnectedSwitcher :  Post Split_Learner + Classfifier --- As last step take the predictions pass to another nerual network..
                       Features : Predictions From Each Split 
                                  Probability of split Classfier 
2. Zoomer   :  Instead of Switching , assign weights to each split learner by observation. Learn this weights with
               another Regressor.
3.ConectedZoomer : Same as connected Switcher.

4. MultiAlgoSwitchers : Find the best algo by observation. 
5. ConnectedMultiAlgoSwitcher 
6. MultiAlgoZoomer 
7. ConnectedMultiAlgoZoomer



Recipies :
  Create readily usable different Architectures of Switchers with combinations  initialisers , base models and meta learners ,connectors
1. KMeans Initialsed
2. Decision Tree Initialised
3. DBSCAN Initialised
4. Tabnet based 
5. Piplelines with apt pre processing and modelling
6. DeepTree Architecture
 


Code Refinement:
1. Create a python package and publish to github
2. Modularise Code for easy component Switching
3. Make Switcher Compatible with Tensorflow /Pytorch /Scikit Learners
4. Make Switcher an AutoML
5. Create functions for switcher in utlities and call functions from utlities
6. Improve Performance of the code (Last Priority)


Documentation & Content:
1. Create Git Documentation
2. Create Architecture Documentation
3. Write Article on Medium
4. Create youtube concept video

Bugs :
  1.  Error handling or understandable warnings
  2.  If post switching everything moves to one split  | Proposed Fix : Don't Post train Classifier , replace splitter with value of splitindex

User Experience :
  1.Add progress bar
  2. Activate tesnforboard for tensorflow modules


create datasets:
     1. Create datasets that proves the objective of model. 
           - Accuracy
           - Interpolation 
           - Extrapolation - Never Promise this
           - Traning Performance vs Inference Performance
           - Interpratability
           - Modifiability
           - Distributability
           - Inference 

Experimental :
1. Pretraining Tabular Data:
        PCA based 